{"version":3,"sources":["RecommendInJavaScript.js","App.js","serviceWorker.js","index.js"],"names":["TrieNode","value","Object","classCallCheck","this","children","Set","amtFinishes","theString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","curTN","err","return","Recommend","sentence","head","i","cur","words","split","recommendation","length","findChildNode","console","info","maxChild","curMaxChild","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","curChild","findMaxChild","pop","theList","push","index","tokenized","toLowerCase","j","child","newChild","add","Recommender","sentance","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","animateCircuit","lines","document","querySelectorAll","circles","state","useIntelligence","forEach","path","style","stroke","getTotalLength","transition","WebkitTransition","strokeDasharray","strokeDashoffset","getBoundingClientRect","setState","initSpeechRecognizer","SpeechRecognizer","window","webkitSpeechRecognition","continuous","onend","isFetching","onresult","event","resultIndex","results","isFinal","result","transcript","log","fetch","then","res","json","isSpeaking","response","stop","getTextFromSpeech","_this$state","start","_this$state2","react_default","a","createElement","className","onClick","concat","Fragment","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0a8ed6b.chunk.js","sourcesContent":["class TrieNode\n{\n\n  constructor(value)\n  {\n    this.children = new Set();\n    this.amtFinishes = 0;\n    this.value = value;\n  }\n  findChildNode(theString)\n  {\n    for (let curTN of this.children)\n    {\n      //console.info(\"found\" + theString + curTN.value);\n      //if(curTN.value.localeCompare(theString))\n      if(curTN.value === theString)\n      {\n        //console.info(\"same\")\n        return curTN;\n      }\n    }\n    return null;\n  }\n\n}\n\nfunction findMaxChild(cur)\n{\n  if(cur.children.length === 0)\n  {\n    return null;\n  }\n  else\n  {\n    var curMaxChild = null;\n    for (let curChild of cur.children)\n    {\n      if(curMaxChild === null || curMaxChild.amtFinishes < curChild.amtFinishes)\n      {\n        curMaxChild = curChild;\n      }\n    }\n\n    return curMaxChild;\n  }\n}\n\nfunction Recommend(sentence, head)\n{\n  var cur = head;\n  var words = sentence.split(\" \");\n  var recommendation = \"\";\n\n  if(sentence.length > 0)\n  {\n    var i;\n    for(i = 0; i < words.length; i++)\n    {\n      var next = cur.findChildNode(words[i]);\n      if(next === null)\n      {\n        console.info(\"did not find the word\");\n        return null;\n      }\n      else\n      {\n        cur = next;\n      }\n      recommendation += words[i] + \" \";\n    }\n  }\n  var maxChild = findMaxChild(cur);\n\n  if(maxChild !== null)\n  {\n    console.info(\"found greatest \" + maxChild.value);\n  }\n  else\n  {\n    console.info(\"no child nodes found\");\n  }\n\n  recommendation += maxChild.value;\n  console.info(recommendation);\n  return recommendation.split(' ').pop();\n}\n\nvar head = new TrieNode(\"\");\nvar theList = [];\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"Hello my name is kenny\");\ntheList.push(\"Hello my name is garrett\");\ntheList.push(\"Hello my name is garrett\");\ntheList.push(\"Hello my name is kenny\");\ntheList.push(\"Hello my name is kenny\");\ntheList.push(\"Hello my name is kenny lol\");\ntheList.push(\"Hello my name is kenny lol\");\ntheList.push(\"Hello my name is kenny lol\");\ntheList.push(\"Hello my name is kenny lol\");\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"Hello my name is garrett yee\");\ntheList.push(\"dude my name is kenny\");\ntheList.push(\"dude my name is kenny lol\");\ntheList.push(\"dude my name is kenny lol\");\ntheList.push(\"dude my name is kenny lol\");\ntheList.push(\"dude my name is kenny lol\");\ntheList.push(\"dude my name is garrett yee\");\ntheList.push(\"dude my name is garrett yee\");\n\nvar tokenized = [];\nvar index;\nfor(index = 0; index < theList.length; index++)\n{\n  theList[index] = theList[index].toLowerCase();\n\n  var words = theList[index].split(\" \");\n  tokenized.push(words);\n}\n\nfor(index = 0; index < tokenized.length; index++)\n{\n  var cur = head;\n  var j;\n  for(j = 0; j < tokenized[index].length; j++)\n  {\n    var child = cur.findChildNode(tokenized[index][j]);\n    if(child != null)\n    {\n      console.info(\"Found child node\");\n      cur = child;\n    }\n    else\n    {\n      console.info(\"No child node, creating one\");\n      var newChild = new TrieNode(tokenized[index][j]);\n      cur.children.add(newChild);\n      cur = newChild;\n    }\n    cur.amtFinishes++;\n  }\n  console.info(cur.amtFinishes);\n}\n\nRecommend(\"\", head);\n\nconst preTrainedTrie = new TrieNode(\"\");\n\nconst Recommender = sentance => Recommend(sentance, head);\n\nexport default Recommender;\n","import React from 'react';\nimport './App.css';\nimport Recommender from './RecommendInJavaScript';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       isSpeaking: false,\n       recommendation: '',\n       useIntelligence: false,\n       SpeechRecognizer: this.initSpeechRecognizer(),\n    };\n  }\n\n  animateCircuit = () => {\n    const lines = document.querySelectorAll('.st0');\n    const circles = document.querySelectorAll('.st1');\n\n    if (!this.state.useIntelligence) {\n      [].forEach.call(lines, function(path) {\n        var length = path.getTotalLength();\n        path.style.transition = path.style.WebkitTransition = 'none';\n        path.style.strokeDasharray = length + ' ' + length;\n        path.style.strokeDashoffset = length;\n        path.getBoundingClientRect();\n        path.style.transition = path.style.WebkitTransition = 'stroke-dashoffset 2s ease-in-out';\n        path.style.stroke = '#61dafb';\n        path.style.strokeDashoffset = '0';\n      });\n\n      [].forEach.call(circles, function(path) {  path.style.stroke = '#61dafb'; })\n    } else {\n      [].forEach.call(lines, function(path) { path.style.stroke = 'transparent'; });\n      [].forEach.call(circles, function(path) {  path.style.stroke = 'transparent'; });\n    }\n\n\n  }\n\n  useIntelligence = () => {\n    this.animateCircuit();\n    this.setState({ useIntelligence: !this.state.useIntelligence, recommendation: '' });\n  }\n\n  initSpeechRecognizer = () => {\n    const SpeechRecognizer = new window.webkitSpeechRecognition();\n    SpeechRecognizer.continuous = true;\n\n    SpeechRecognizer.onend = () => this.setState({ isFetching: false });\n\n    SpeechRecognizer.onresult = event => {\n      for (var i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          const result = event.results[i][0].transcript;\n          console.log(result);\n\n          if (this.state.useIntelligence) {\n            fetch('https://gauravkg15.pythonanywhere.com/hmm_predict?token=api_response')\n              .then(res => res.json())\n              .then(res => this.setState({ isSpeaking: false, recommendation: res.response }))\n          } else {\n            this.setState({ isSpeaking: false, recommendation:  Recommender(result) });\n          }\n        }\n        SpeechRecognizer.stop();\n      }\n    }\n\n    return SpeechRecognizer;\n  }\n\n\n  getTextFromSpeech = () => {\n    const { isSpeaking, SpeechRecognizer } = this.state;\n    this.setState({ isSpeaking: !isSpeaking });\n\n    if (isSpeaking) {\n      SpeechRecognizer.stop();\n    } else {\n      SpeechRecognizer.start();\n    }\n  }\n\n  render() {\n    const { isSpeaking, recommendation, useIntelligence } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1> Predict the next lyrics! </h1>\n          <h3\n            onClick={this.useIntelligence}\n            className=\"toggle-intelligence\"\n          >\n            { useIntelligence ? 'Use naive' : 'Use intelligence'}\n           </h3>\n          <div className={`icon ${isSpeaking ? 'voice-input-active' : ''}` } onClick={this.getTextFromSpeech}>\n            <i className=\"fas fa-microphone-alt\" />\n          </div>\n          {\n            recommendation &&\n            <React.Fragment>\n              <h3> The next word is: </h3>\n              <p> { recommendation } </p>\n            </React.Fragment>\n          }\n          {\n            recommendation === null &&\n            <h3> Sorry, no recommendations at this time. </h3>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}